[project]
name = "painto"
version = "0.3.0"
description = "A flexible color library"
authors = [
    {name = "Michael Knowles"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
]

[project.urls]
Source = "https://github.com/mapledyne/painto/"
Documentation = "https://mapledyne.github.io/painto/"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "painto"
packages = [
    {include = "painto", from = "src"}
]


[tool.ruff]
line-length = 100
indent-width = 4
extend-exclude = [".scratch"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]

select = [
  # default
  "F",      # flake8 error
  "E",      # pycodestyle error
  "I",      # isort imports
  "ANN", # flake8 type annotations
  "RUF", # ruff-specific rules
  # extra
  "A",      # builtin shadowing
  "B",      # flake8 bugbear
  "BLE",    # aboid bare excepts
  "C4",     # simplify comprehensions
  "DTZ",    # datetime errors
  "FBT",    # avoid boolean trap
  "G",      # logging format
  "N",      # conform to PEP8 naming rules
  "RET",    # return values
  "S",      # bandit
  "TRY",    # exceptions antipatterns
  "UP",     # upgade syntax
  "W",      # pycodestyle warning
  "YTT",    # wrong usage of sys.info
]
fixable = ["ALL"]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
disallow_untyped_defs = true